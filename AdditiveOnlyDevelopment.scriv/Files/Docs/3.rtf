{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \fi360\ltrch\loch {\f0\fs24\b0\i0 In the current landscape of micro services, with development teams focused primarily on new features or bug fixes, there is an emerging trend that developers and product managers need to content with "breaking changes" that can be introduced into a system.  In past years, breaking changes were often confined to a single team, or in some cases two teams, and communication of the changes were relatively simple; developers knew what pieces of their monoliths were being used other pieces inside the same solution.  As the era of monoliths comes to a close and the era of micro services and REST API endpoints takes more and more mind share, this control process of "breaking changes" becomes much more difficult to define, address, and prevent.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 The aim of this article is to present one such solution.  It will delve into the strict definition and its strict implementation, as well as a more practical recommendation to its adoption.  Like so many other process and technical solutions, there is a die hard path, an avoidance path, and a path of least resistance.  This article will strive to provide a path of least resistance for implementing this potential process solution into an existing development life cycle.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 We will examine what situations cause a breaking change, try to come to a standard definition of what is a breaking change, and explore how to leverage this new methodology across each of the situations we define.  It will help, to keep in mind that the main tenants of this new methodology aren\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92t new and are really just a collection of strategies and purposeful development aimed at preventing breaking changes in largely distributed code bases.}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0}
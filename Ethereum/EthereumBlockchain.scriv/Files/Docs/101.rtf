{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \fi360\ltrch\loch {\f0\fs24\b0\i0 Individual nodes and miners are responsible for getting transactions rolled up into blocks to be included on the blockchain.  This method by which this happens is called consensus. }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 There are two main issues that need to be addressed when we talk about the consensus mechanism.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 First, how do the members needed for consensus trust new submissions?  There is little to no concern that a node may be intentionally feeding the system bad information. }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 The three most popular inclusion mechanisms are:}
\par\plain {\f0\fs24\b0\i0 - Proof of Work}
\par\plain {\f0\fs24\b0\i0 - Proof of Stake}
\par\plain {\f0\fs24\b0\i0 - Proof of Authority}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Once we understand how new data can be introduced into the system, next is an issue that plagues many distributed system, how to get trusted nodes to agree to an updated state of the system and ensuring the information being shared is the most up-to-date data. Each blockchain implementation has a way to mitigate this issue, and the method chosen by Ethereum is known as the GHOST protocol. }
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0}
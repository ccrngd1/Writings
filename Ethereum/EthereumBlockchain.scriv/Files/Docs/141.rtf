{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \fi360\ltrch\loch {\f0\fs24\b0\i0 Bootstrapping the network only requires starting the docker compose file.  Before we dive into the details of what is involved, let\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s run the commands needed to get it started.  The network should start and synchronize without any further configuration. The networks always uses the latest available versions of Ethereum and Swarm, the network is set up for clique proof-of-authority similar to the Ethereum Rinkeby testnet.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0 \{\\Scrv_ps=cd ~/test-kitchen/ethereum_poc/geth-dev\\end_Scrv_ps\}}
\par\plain {\f0\fs24\b0 \{\\Scrv_ps=docker compose up\\end_Scrv_ps\}}
\par\plain \f0\fs24\b0
\par\plain {\f0\fs24\b0\i0 The terminal window will be occupied with the docker containers and will constantly stream out information as the nodes continue to work.}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0}